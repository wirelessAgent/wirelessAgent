class Solution {
public:
    void dfs(TreeNode* root, vector<int>& num) {
        if(root == NULL)
           return;

           num.push_back(root->val);
           dfs(root->right, num);
           dfs(root->left, num);
    }
    int getMinimumDifference(TreeNode* root) {

         vector<int> num;
         dfs(root, num); //Or use inorder
         
         sort(num.begin(), num.end()); //In case of DFS, sort it. With inorder, no need to sort

         int minDiff = INT_MAX, diff = 0;
         for(int i = 1; i < num.size(); i++) {
            diff = num[i] - num[i-1];

            minDiff = min(diff, minDiff);
         }

         return minDiff;
    }
};
